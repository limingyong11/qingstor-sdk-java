{{$service := .Data.Service}}

package com.qingstor.sdk.service;

import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.qingstor.sdk.annotation.ParamAnnotation;
import com.qingstor.sdk.common.auth.Credentials;
import com.qingstor.sdk.config.ClientConfiguration;
import com.qingstor.sdk.config.EnvContext;
import com.qingstor.sdk.constants.QSConstant;
import com.qingstor.sdk.exception.QSException;
import com.qingstor.sdk.request.ResponseCallBack;
import com.qingstor.sdk.model.OutputModel;
import com.qingstor.sdk.model.RequestInputModel;
import com.qingstor.sdk.utils.QSStringUtil;
import com.qingstor.sdk.service.Types.*;
import com.qingstor.sdk.request.RequestHandler;
import com.qingstor.sdk.request.QSRequest;
import com.qingstor.sdk.common.OperationContext;

{{if $service.Description}}/** {{$service.Name | camelCase}}Service: {{$service.Description}} */{{end}}
public class QingStor {
    private String zone;
    private Credentials cred;
    private ClientConfiguration clientCfg;

    public QingStor(EnvContext envContext, String zone) {
        this.cred = envContext;
        this.clientCfg = ClientConfiguration.from(envContext);
        this.zone = zone;
    }

    public QingStor(EnvContext envContext) {
        this.cred = envContext;
        this.clientCfg = ClientConfiguration.from(envContext);
    }

    public Bucket getBucket(String bucketName, String zone) {
        return new Bucket(this.cred, this.clientCfg, zone, bucketName);
    }

    {{range $_, $operation := $service.Operations}}
        {{template "RenderOperation" passThrough $service $operation}}
    {{end}}

}
