{{$service := .Data.Service}}
{{$subServices := .Data.SubServices }}

package com.qingstor.sdk.service;

import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.qingstor.sdk.annotation.ParamAnnotation;
import com.qingstor.sdk.config.EnvContext;
import com.qingstor.sdk.constants.QSConstant;
import com.qingstor.sdk.exception.QSException;
import com.qingstor.sdk.request.ResponseCallBack;
import com.qingstor.sdk.request.ResourceRequestFactory;
import com.qingstor.sdk.model.OutputModel;
import com.qingstor.sdk.model.RequestInputModel;
import com.qingstor.sdk.utils.QSStringUtil;
import com.qingstor.sdk.service.Types.*;
import com.qingstor.sdk.request.RequestHandler;

{{if $service.Description}}// {{$service.Name | camelCase}}Service: {{$service.Description}}{{end}}
public class QingStor {
    private String zone;
    private EnvContext envContext;
    private String bucketName;

    public QingStor(EnvContext envContext,String zone){
       this.envContext = envContext;
       this.zone = zone;
    }

    public QingStor(EnvContext envContext) {
        this.envContext = envContext;
    }

    {{range $_, $operation := $service.Operations}}
        {{$belongs := printf "%sService" ($service.Name | camelCase)}}
        {{template "RenderOperation" passThrough $belongs $operation}}
    {{end}}

    public com.qingstor.sdk.service.Bucket getBucket(String bucketName,String zone){
        return new com.qingstor.sdk.service.Bucket(this.envContext, zone, bucketName);
    }
}
